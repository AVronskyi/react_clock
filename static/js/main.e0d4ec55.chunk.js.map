{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","clock","state","date","Date","this","window","setInterval","setState","console","log","toLocaleTimeString","name","props","clearInterval","React","Component","App","isClockVisible","showClock","hideClock","randomName","Math","ceil","random","className","onClick","type","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACUC,WADV,IAGEC,MAAQ,CACNC,KAAM,IAAIC,MAJd,uDAOE,WAAqB,IAAD,OAClBC,KAAKJ,MAAQK,OAAOC,aAAY,WAC9B,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAG1BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC3B,OAbP,gCAgBE,YAAqC,IAAhBC,EAAe,EAAfA,KACfP,KAAKQ,MAAMD,OAASA,GAEtBH,QAAQC,IAAR,qCAA0CE,EAA1C,eAAqDP,KAAKQ,MAAMD,SAnBtE,kCAuBE,WACEE,cAAcT,KAAKJ,SAxBvB,oBA2BE,WACE,OACE,mCACGI,KAAKH,MAAMC,KAAKQ,2BA9BzB,GAA2BI,IAAMC,WCD3BC,E,4MACJf,MAAQ,CACNU,KAAM,EACNM,gBAAgB,G,EAGlBC,UAAY,WACV,EAAKX,SAAS,CAAEU,gBAAgB,K,EAGlCE,UAAY,WACV,EAAKZ,SAAS,CAAEU,gBAAgB,K,EAGlCG,WAAa,WACX,EAAKb,SAAS,CACZI,KAAMU,KAAKC,KAAqB,GAAhBD,KAAKE,a,4CAIzB,WAAU,IAAD,OACP,OACE,sBAAKC,UAAU,MAAf,UACE,6CACA,8CAEGpB,KAAKH,MAAMgB,gBACV,cAAC,EAAD,CAAON,KAAMP,KAAKH,MAAMU,UAG5B,wBACEc,QAAS,kBAAM,EAAKN,aACpBO,KAAK,SAFP,wBAMA,wBACED,QAASrB,KAAKc,UACdQ,KAAK,SAFP,wBAMA,wBACED,QAAS,kBAAM,EAAKL,cACpBM,KAAK,SAFP,oC,GA1CUZ,IAAMC,WAqDTC,IC3DfW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e0d4ec55.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  date: Date;\n};\n\ntype Props = {\n  name: number;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  private clock?: number;\n\n  state = {\n    date: new Date(),\n  };\n\n  componentDidMount() {\n    this.clock = window.setInterval(() => {\n      this.setState({ date: new Date() });\n\n      // eslint-disable-next-line\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate({ name }: Props) {\n    if (this.props.name !== name) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.clock);\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.date.toLocaleTimeString()}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ntype State = {\n  name: number,\n  isClockVisible: boolean,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    name: 0,\n    isClockVisible: true,\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  randomName = () => {\n    this.setState({\n      name: Math.ceil(Math.random() * 10),\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>\n          Current time:\n          {this.state.isClockVisible && (\n            <Clock name={this.state.name} />\n          )}\n        </p>\n        <button\n          onClick={() => this.hideClock()}\n          type=\"button\"\n        >\n          Hide Clock\n        </button>\n        <button\n          onClick={this.showClock}\n          type=\"button\"\n        >\n          Show Clock\n        </button>\n        <button\n          onClick={() => this.randomName()}\n          type=\"button\"\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}